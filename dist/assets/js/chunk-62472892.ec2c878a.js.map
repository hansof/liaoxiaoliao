{"version":3,"sources":["webpack:///./src/views/upload.vue?d1ff","webpack:///src/views/upload.vue","webpack:///./src/views/upload.vue?b7fe","webpack:///./src/views/upload.vue","webpack:///./node_modules/exif-js/exif.js","webpack:///./src/views/upload.vue?da61"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticClass","attrs","domProps","on","$event","target","composing","textValue","staticStyle","_l","item","index","key","ref","refInFor","removearr","checkImg","sl1","sl2","sl3","upload","staticRenderFns","data","headerImage","imagesHTML","mounted","methods","files","length","picValue","imgPreview","Orientation","file","window","FileReader","test","type","reader","readAsDataURL","onloadend","postImg","rotateImg","img","step","min_step","direction","max_step","canvas","width","height","ctx","drawImage","rotate","degree","compress","ratio","console","log","Math","sqrt","fillStyle","fillRect","count","tCanvas","nw","nh","tctx","i","j","initSize","ndata","udimg","unfile","result","images","isupload","src","link","onload","e","path","style","component","debug","EXIF","obj","EXIFwrapped","module","exports","ExifTags","Tags","TiffTags","GPSTags","0","IFD1Tags","StringValues","ExposureProgram","1","2","3","4","5","6","7","8","MeteringMode","255","LightSource","9","10","11","12","13","14","15","17","18","19","20","21","22","23","24","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","base64ToArrayBuffer","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","status","response","send","getImageData","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","findIPTCinJPEG","isXmpEnabled","xmpdata","findXMPinJPEG","call","arrayBuffer","fileReader","blob","readAsArrayBuffer","self","Blob","File","byteLength","dataView","DataView","getUint8","marker","offset","readEXIFData","getUint16","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","readIPTCData","IptcFieldMap","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","getStringFromDB","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","val","n","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","getNextIFDOffset","readThumbnailImage","firstIFDOffset","IFD1OffsetPointer","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","ExifIFDPointer","GPSInfoIFDPointer","dom","DOMParser","xmpString","xmpEndIndex","indexOf","substring","indexOfXmp","slice","domDocument","parseFromString","xml2Object","xml2json","xml","json","nodeType","attributes","attribute","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","message","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","readFromBinaryFile"],"mappings":"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","file":"assets/js/chunk-62472892.ec2c878a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.textValue),expression:\"textValue\"}],staticClass:\"liaotitle\",attrs:{\"placeholder\":\"请输入标题（标题未付费用户也可见）\",\"maxlength\":\"50\"},domProps:{\"value\":(_vm.textValue)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.textValue=$event.target.value}}}),_c('div',{staticStyle:{\"padding\":\"20px\"}},[_c('div',{staticClass:\"show\"},[_c('ul',[_vm._l((_vm.imagesHTML),function(item,index){return [_c('li',{key:'img'+index},[_c('img',{ref:\"dataremove\",refInFor:true,staticClass:\"removeimg\",attrs:{\"src\":require(\"@/assets/img/remove.png\"),\"data-remove\":index,\"alt\":\"\"},on:{\"click\":function($event){return _vm.removearr(index)}}}),_c('div',{staticClass:\"overflowbigimg\"},[_c('img',{staticClass:\"bigimg\",attrs:{\"src\":item,\"preview\":\"1\",\"alt\":\"\"},on:{\"load\":function($event){return _vm.checkImg(item,$event)}}})])])]}),_c('li',[_c('div',{staticClass:\"shizi_div\"},[_c('input',{staticClass:\"uploadBtn\",attrs:{\"type\":\"file\",\"accept\":\"image/*\",\"name\":\"imageFile\",\"multiple\":\"multiple\",\"id\":\"upload\"},on:{\"focus\":function($event){_vm.sl1=_vm.sl2=_vm.sl3=false},\"change\":function($event){return _vm.upload($event)}}})])]),_c('div',{staticClass:\"clear\"})],2)]),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('input',{attrs:{\"type\":\"file\",\"id\":\"upload\",\"accept\":\"image\"},on:{\"change\":_vm.upload}}),_c('label',{attrs:{\"for\":\"upload\"}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <textarea  class=\"liaotitle\"\n          placeholder=\"请输入标题（标题未付费用户也可见）\"\n          maxlength=\"50\" v-model=\"textValue\"></textarea>\n    <div style=\"padding:20px;\">\n      <div class=\"show\">\n        <!-- <div class=\"picture\" :style=\"'backgroundImage:url('+headerImage+')'\"></div> -->\n        <ul>\n          <template v-for=\"(item , index) in imagesHTML\">\n            <li :key=\"'img'+index\">\n              <img\n                src=\"@/assets/img/remove.png\"\n                :data-remove=\"index\"\n                @click=\"removearr(index)\"\n                ref=\"dataremove\"\n                class=\"removeimg\"\n                alt\n              />\n              <div class=\"overflowbigimg\">\n                <img\n                  :src=\"item\"\n                  class=\"bigimg\"\n                  @load=\"checkImg(item,$event)\"\n                  preview=\"1\"\n                  alt\n                />\n              </div>\n            </li>\n          </template>\n          <!-- <li>\n            <img src=\"@/assets/img/remove.png\" class=\"removeimg\" alt />\n            <img src=\"@/assets/img/ceshi.jpg\" class=\"bigimg\" alt />\n          </li>-->\n          <!-- <li v-if=\"isupload\">\n            <div class=\"shizi_div\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                name=\"imageFile\"\n                class=\"uploadBtn\"\n                @focus=\"sl1=sl2=sl3=false\"\n                @change=\"upload()\"\n              />\n            </div>\n          </li>-->\n          <li >\n            <div class=\"shizi_div\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                name=\"imageFile\"\n                class=\"uploadBtn\"\n                multiple=\"multiple\"\n                @focus=\"sl1=sl2=sl3=false\"\n                @change=\"upload($event)\"\n                id=\"upload\"\n              />\n            </div>\n          </li>\n          <div class=\"clear\"></div>\n        </ul>\n      </div>\n      <div style=\"margin-top:20px;\">\n        <input type=\"file\" id=\"upload\" accept=\"image\" @change=\"upload\" />\n        <label for=\"upload\"></label>\n      </div>\n    </div>\n  </div>\n</template> \n<script>\nimport Exif from \"exif-js\";\nexport default {\n  data() {\n    return {\n      headerImage: \"\",\n      imagesHTML:[],\n      textValue:\"这是该换行的\\n这是该换行的\\n\\n这是该换行的\\n\"\n    };\n  },\n  mounted() {},\n  methods: {\n    upload(e) {\n      let files = e.target.files || e.dataTransfer.files;\n    //   debugger;\n      if (!files.length) return;\n      for(let key in files){\n        this.picValue = files[key];\n        this.imgPreview(this.picValue);\n      }\n     \n    },\n    imgPreview(file) {\n      let self = this;\n      let Orientation;\n      //去获取拍照时的信息，解决拍出来的照片旋转问题\n      Exif.getData(file, function() {\n        Orientation = Exif.getTag(this, \"Orientation\");\n      });\n      // 看支持不支持FileReader\n      if (!file || !window.FileReader) return;\n      if (/^image/.test(file.type)) {\n        // 创建一个reader\n        let reader = new FileReader();\n        // 将图片2将转成 base64 格式\n        reader.readAsDataURL(file);\n        // 读取成功后的回调\n        reader.onloadend = async function() {\n          let result = this.result;\n          let img = new Image();\n          img.src = result;\n          //判断图片是否大于100K,是就直接上传，反之压缩图片\n          if (this.result.length <= 100 * 1024) {\n            self.headerImage = this.result;\n            self.postImg(data);\n          } else {\n            img.onload = function() {\n              let data = self.compress(img, Orientation);\n              self.headerImage = data;\n              self.postImg(data);\n            };\n          }\n        };\n      }\n    },\n    postImg(baseImg) {\n      //这里写接口\n       this.imagesHTML.push(baseImg);\n    },\n    rotateImg(img, direction, canvas) {\n      //最小与最大旋转方向，图片旋转4次后回到原方向\n      const min_step = 0;\n      const max_step = 3;\n      if (img == null) return;\n      //img的高度和宽度不能在img元素隐藏后获取，否则会出错\n      let height = img.height;\n      let width = img.width;\n      let step = 2;\n      if (step == null) {\n        step = min_step;\n      }\n      if (direction == \"right\") {\n        step++;\n        //旋转到原位置，即超过最大值\n        step > max_step && (step = min_step);\n      } else {\n        step--;\n        step < min_step && (step = max_step);\n      }\n      //旋转角度以弧度值为参数\n      let degree = (step * 90 * Math.PI) / 180;\n      let ctx = canvas.getContext(\"2d\");\n      switch (step) {\n        case 0:\n          canvas.width = width;\n          canvas.height = height;\n          ctx.drawImage(img, 0, 0);\n          break;\n        case 1:\n          canvas.width = height;\n          canvas.height = width;\n          ctx.rotate(degree);\n          ctx.drawImage(img, 0, -height);\n          break;\n        case 2:\n          canvas.width = width;\n          canvas.height = height;\n          ctx.rotate(degree);\n          ctx.drawImage(img, -width, -height);\n          break;\n        case 3:\n          canvas.width = height;\n          canvas.height = width;\n          ctx.rotate(degree);\n          ctx.drawImage(img, -width, 0);\n          break;\n      }\n    },\n    compress(img, Orientation) {\n      let canvas = document.createElement(\"canvas\");\n      let ctx = canvas.getContext(\"2d\");\n      //瓦片canvas\n      let tCanvas = document.createElement(\"canvas\");\n      let tctx = tCanvas.getContext(\"2d\");\n      let initSize = img.src.length;\n      let width = img.width;\n      let height = img.height;\n      //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\n      let ratio;\n      if ((ratio = (width * height) / 4000000) > 1) {\n        console.log(\"大于400万像素\");\n        ratio = Math.sqrt(ratio);\n        width /= ratio;\n        height /= ratio;\n      } else {\n        ratio = 1;\n      }\n      canvas.width = width;\n      canvas.height = height;\n      // 铺底色\n      ctx.fillStyle = \"#fff\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      //如果图片像素大于100万则使用瓦片绘制\n      let count;\n      if ((count = (width * height) / 1000000) > 1) {\n        console.log(\"超过100W像素\");\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n        //  计算每块瓦片的宽和高\n        let nw = ~~(width / count);\n        let nh = ~~(height / count);\n        tCanvas.width = nw;\n        tCanvas.height = nh;\n        for (let i = 0; i < count; i++) {\n          for (let j = 0; j < count; j++) {\n            tctx.drawImage(\n              img,\n              i * nw * ratio,\n              j * nh * ratio,\n              nw * ratio,\n              nh * ratio,\n              0,\n              0,\n              nw,\n              nh\n            );\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n          }\n        }\n      } else {\n        ctx.drawImage(img, 0, 0, width, height);\n      }\n      //修复ios上传图片的时候 被旋转的问题\n      if (Orientation != \"\" && Orientation != 1) {\n        switch (Orientation) {\n          case 6: //需要顺时针（向左）90度旋转\n            this.rotateImg(img, \"left\", canvas);\n            break;\n          case 8: //需要逆时针（向右）90度旋转\n            this.rotateImg(img, \"right\", canvas);\n            break;\n          case 3: //需要180度旋转\n            this.rotateImg(img, \"right\", canvas); //转两次\n            this.rotateImg(img, \"right\", canvas);\n            break;\n        }\n      }\n      //进行最小压缩\n      let ndata = canvas.toDataURL(\"image/jpeg\", 0.1);\n      console.log(\"压缩前：\" + initSize);\n      console.log(\"压缩后：\" + ndata.length);\n      console.log(\n        \"压缩率：\" + ~~((100 * (initSize - ndata.length)) / initSize) + \"%\"\n      );\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n      return ndata;\n    },\n    /**\n     * 删除图片\n     */\n    removearr(n) {\n      let udimg = this.imagesHTML\n        .slice(0, n)\n        .concat(this.imagesHTML.slice(n + 1, this.imagesHTML.length));\n      this.imagesHTML = udimg;\n      let unfile = this.files\n        .slice(0, n)\n        .concat(this.files.slice(n + 1, this.files.length));\n      this.files = unfile;  \n      if(!!this.orderId){\n        let unresultimg=this.result.images.slice(0, n).concat(this.result.images.slice(n + 1, this.result.images.length));\n        this.result.images=unresultimg;\n      }\n    \n      if (this.imagesHTML.length < 3) {\n        this.isupload = true;\n      }\n    },\n     checkImg(link, e) {\n      let that = this;\n      let img = new Image();\n      img.src = link\n      img.onload = function() {\n        if (img.width >= img.height) {\n          e.path[0].style.height = \"100%\";\n          e.path[0].style.width = \"auto\";\n          //e.path[0].style.left= \"-\"+((((fontSize*1.2)/img.height)*img.width)/fontSize-1.2)/2+\"rem\";\n        } else {\n          e.path[0].style.height = \"auto\";\n          e.path[0].style.width = \"100%\";\n          //e.path[0].style.top= \"-\"+((((fontSize*1.2)/img.width)*img.height)/fontSize-1.2)/2+\"rem\";\n        }\n      };\n      return;\n    },\n  }\n};\n</script> \n<style>\n* {\n  margin: 0;\n  padding: 0;\n}\n\n.picture {\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n}\nul li {\n  width: 1.2rem;\n  height: 1.2rem;\n  float: left;\n  position: relative;\n  margin-right: 0.3rem;\n  border-radius: 0.06rem;\n}\nul li .overflowbigimg {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 0.06rem;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nul li .bigimg {\n  position: absolute;\n  border-radius: 0.06rem;\n  display: inherit;\n  width: 100%;\n  height: auto;\n}\nul li .height100 {\n  width: auto;\n  height: 100%;\n}\nul li img.removeimg {\n  position: absolute;\n  right: -0.1rem;\n  top: -0.1rem;\n  width: 0.3rem;\n  height: 0.3rem;\n  z-index: 111;\n}\n.shizi_div {\n  height: 1.2rem;\n  width: 1.2rem;\n  background: url(../assets/img/shizi.png) no-repeat center center;\n  background-color: #f4f4f4;\n  background-size: 0.4rem 0.4rem;\n  border-radius: 0.06rem;\n}\n.liaotitle {\n  position: relative;\n  height: auto;\n  line-height: 0.4rem;\n  width: 100%;\n  background: #fafafa;\n  border: 1px solid #ececec;\n  z-index: 200;\n  border-radius: 0.1rem;\n  outline: 0;\n  padding: 0.24rem 0.2rem;\n  outline: none;\n  resize: none;\n  font-size: 0.26rem;\n  color: #333333;\n  -webkit-user-select: text;\n  /* display: -webkit-box;    */\n  /* -webkit-box-pack:center;   */\n  /* -webkit-box-align:center;    */\n  /* -webkit-box-orient: vertical;     */\n  word-wrap: break-word;\n  word-break: break-all;\n  display: inherit;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./upload.vue?vue&type=template&id=490d5725&\"\nimport script from \"./upload.vue?vue&type=script&lang=js&\"\nexport * from \"./upload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./upload.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}